name: Development Deployment

on:
  push:
    branches: [development]

jobs:
  provision-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        run: terraform -chdir=infrastructure fmt -check

      - name: Terraform Init
        run: terraform -chdir=infrastructure init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        run: terraform -chdir=infrastructure validate

      - name: Terraform Plan
        run: terraform -chdir=infrastructure plan
      
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform -chdir=infrastructure apply

  build-webapp:
    runs-on: ubuntu-latest
    needs: provision-infrastructure
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Build webapp in production mode using docker
        run: docker-compose run --entrypoint "/bin/bash -c 'npm run dev:build'" webapp

      - name: Preserve built front end
        uses: actions/upload-artifact@v2
        with:
          name: dist-development
          path: |
            webapp/dist/
          
          if-no-files-found: error

  deploy-webapp:
    runs-on: ubuntu-latest
    needs: build-webapp
    steps:
      - name: Retrieve previously built front-end
        uses: actions/download-artifact@v2
        with:
          name: dist-development
          path: webapp/dist

      - name: Upload compiled webapp to s3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: development.trydev.jamescroney.com
          AWS_REGION: us-east-1
          SOURCE_DIR: webapp/dist

      - name: Invalidate cloudfront cache to refresh served content
        uses: awact/cloudfront-action@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DISTRIBUTION_ID: ${{ secrets.DEVELOPMENT_CLOUDFRONT }}
          AWS_REGION: us-east-1
          SOURCE_PATH: "/*"

  healthcheck:
    runs-on: ubuntu-latest
    needs: deploy-webapp

    steps:
      - name: Webapp Health Check
        uses: jtalk/url-health-check-action@v2
        with:
          url: https://dev.mowmatch.com
          follow-redirect: true
          max-attempts: 5
          retry-delay: 15s
